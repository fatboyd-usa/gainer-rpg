import { useState, useEffect } from 'react';
import { supabase } from '../lib/supabaseClient';
export default function Log(){
  const [type,setType]=useState('breakfast'); const [calories,setCalories]=useState(''); const [weight,setWeight]=useState(''); const [logs,setLogs]=useState([]);
  useEffect(()=>{ load(); },[]);
  async function load(){ const { data: users } = await supabase.from('users').select('*').limit(1); if(!users||users.length===0) return; const user=users[0]; const { data: c } = await supabase.from('calorie_log').select('*').eq('user_id', user.id).order('logged_at',{ascending:false}).limit(50); setLogs(c||[]); }
  async function submitCal(e){ e.preventDefault(); const { data: users } = await supabase.from('users').select('*').limit(1); if(!users||users.length===0){ alert('No user'); return;} const user=users[0]; await supabase.from('calorie_log').insert([{ user_id:user.id, entry_type:type, calories: Number(calories) }]); setCalories(''); load(); }
  async function submitWeight(e){ e.preventDefault(); const { data: users } = await supabase.from('users').select('*').limit(1); if(!users||users.length===0){ alert('No user'); return;} const user=users[0]; await supabase.from('weight_log').insert([{ user_id:user.id, weight: Number(weight) }]); setWeight(''); load(); }
  return (<div><h1>Log</h1><div style={{display:'grid',gridTemplateColumns:'1fr 1fr',gap:16}}><div className="card"><h3>Log Calories</h3><form onSubmit={submitCal}><div className="small">Entry Type</div><select value={type} onChange={e=>setType(e.target.value)}><option value="breakfast">Breakfast</option><option value="lunch">Lunch</option><option value="dinner">Dinner</option><option value="snack">Snack</option><option value="extra_meal">Extra Meal</option></select><div className="small" style={{marginTop:8}}>Calories</div><input value={calories} onChange={e=>setCalories(e.target.value)} /><div style={{marginTop:12}}><button className="button">Log Calories</button></div></form></div><div className="card"><h3>Log Weight</h3><form onSubmit={submitWeight}><div className="small">Weight (lbs)</div><input value={weight} onChange={e=>setWeight(e.target.value)} /><div style={{marginTop:12}}><button className="button">Log Weight</button></div></form></div></div><div style={{marginTop:20}} className="card"><h3>Recent Calorie Logs</h3><ul>{logs.map(l=><li key={l.id} className="small">{new Date(l.logged_at).toLocaleString()} — {l.entry_type} — {l.calories} cal</li>)}</ul></div></div>); }
